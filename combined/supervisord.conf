[supervisord]
nodaemon=true
logfile=/var/log/supervisord.log
pidfile=/var/run/supervisord.pid

; ---------- API (Flask via Gunicorn WSGI) ----------
; Dify API exposes a Flask app in /app/src/api/app.py -> app:app
[program:api]
directory=/app/src/api
command=/bin/bash -lc "gunicorn app:app -b 0.0.0.0:%(ENV_PORT_API)s --workers 2 --timeout 120"
autostart=true
autorestart=true
startsecs=2
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
environment=PYTHONUNBUFFERED=1,LOG_LEVEL=%(ENV_LOG_LEVEL)s

; ---------- Celery worker ----------
; Keep it simple with -P solo unless you specifically need gevent/eventlet.
[program:worker]
directory=/app/src/api
command=/bin/bash -lc "celery -A app.celery worker -P solo -c 1 --loglevel INFO -Q dataset,generation,mail,ops_trace"
autostart=true
autorestart=true
startsecs=2
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0

; ---------- Web (Node dev server) ----------
[program:web]
directory=/app/src/web
; If the web project uses a different start script (e.g., dev), adjust here.
command=/bin/bash -lc "pnpm start -- --port=%(ENV_PORT_WEB)s"
autostart=true
autorestart=true
startsecs=2
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
